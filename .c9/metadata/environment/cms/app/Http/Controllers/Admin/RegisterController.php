{"filter":false,"title":"RegisterController.php","tooltip":"/cms/app/Http/Controllers/Admin/RegisterController.php","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":71,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers\\Auth;","","use App\\User;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","","    use RegistersUsers;","","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/home';","","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function __construct()","    {","        $this->middleware('guest');","    }","","    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'name' => 'required|string|max:255',","            'email' => 'required|string|email|max:255|unique:users',","            'password' => 'required|string|min:6|confirmed',","        ]);","    }","","    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return User::create([","            'name' => $data['name'],","            'email' => $data['email'],","            'password' => bcrypt($data['password']),","        ]);","    }","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":78,"column":1},"action":"insert","lines":["<?php","namespace App\\Http\\Controllers\\Admin\\Auth;　　// Adminの追加","","use App\\Admin;  // 追加","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","","use RegistersUsers;","","/**"," * Where to redirect users after registration."," *"," * @var string"," */","protected $redirectTo = '/admin/home';　　// リダイレクト先","","","public function showRegisterForm()","{","    return view('admin.auth.register');  // 管理者用テンプレート","}","","/**"," * Get a validator for an incoming registration request."," *"," * @param  array  $data"," * @return \\Illuminate\\Contracts\\Validation\\Validator"," */","protected function validator(array $data)","{","    return Validator::make($data, [","        'name' =&gt; ['required', 'string', 'max:255'],","        'email' =&gt; ['required', 'string', 'email', 'max:255', 'unique:admins'], // adminsテーブに変更","        'password' =&gt; ['required', 'string', 'min:6', 'confirmed'],","    ]);","}","","/**"," * Create a new user instance after a valid registration."," *"," * @param  array  $data"," * @return \\App\\User"," */","protected function create(array $data)","{","    return Admin::create([  // Adminに変更","        'name' =&gt; $data['name'],","        'email' =&gt; $data['email'],","        'password' =&gt; Hash::make($data['password']),","    ]);","}","","/**"," * Get the guard to be used during registration."," *"," * @return \\Illuminate\\Contracts\\Auth\\StatefulGuard"," */","protected function guard()","{","    return \\Auth::guard('admin'); //管理者認証のguardを指定","}","","","}"]}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"insert","lines":["// "],"id":4}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"remove","lines":["// "],"id":5}],[{"start":{"row":1,"column":42},"end":{"row":1,"column":44},"action":"remove","lines":["　　"],"id":6},{"start":{"row":1,"column":42},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"remove","lines":["// "],"id":7}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"insert","lines":["// "],"id":8}],[{"start":{"row":30,"column":39},"end":{"row":30,"column":40},"action":"remove","lines":["　"],"id":9},{"start":{"row":30,"column":38},"end":{"row":30,"column":39},"action":"remove","lines":["　"]}],[{"start":{"row":30,"column":38},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":10}],[{"start":{"row":48,"column":16},"end":{"row":48,"column":17},"action":"insert","lines":["&"],"id":11},{"start":{"row":48,"column":17},"end":{"row":48,"column":18},"action":"insert","lines":["g"]},{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":48,"column":19},"end":{"row":48,"column":22},"action":"remove","lines":["&gt"],"id":12},{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"remove","lines":["t"]},{"start":{"row":48,"column":17},"end":{"row":48,"column":18},"action":"remove","lines":["g"]}],[{"start":{"row":48,"column":17},"end":{"row":48,"column":18},"action":"insert","lines":["g"],"id":13},{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":2,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["// Adminの追加","",""],"id":18}],[{"start":{"row":6,"column":46},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":22}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["<?php","namespace App\\Http\\Controllers\\Admin\\Auth;","use App\\Admin;  // 追加","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","class RegisterController extends Controller",""],"id":25},{"start":{"row":0,"column":0},"end":{"row":7,"column":43},"action":"insert","lines":["<?php","namespace App\\Http\\Controllers\\Admin\\Auth;","use App\\Admin;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","class RegisterController extends Controller"]}],[{"start":{"row":7,"column":43},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":26}],[{"start":{"row":8,"column":0},"end":{"row":35,"column":0},"action":"remove","lines":["{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","","use RegistersUsers;","","/**"," * Where to redirect users after registration."," *"," * @var string"," */","protected $redirectTo = '/admin/home';","// リダイレクト先","","","public function showRegisterForm()","{","    return view('admin.auth.register');  // 管理者用テンプレート","}",""],"id":30},{"start":{"row":8,"column":0},"end":{"row":34,"column":5},"action":"insert","lines":["{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","    use RegistersUsers;","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/admin/home';","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function showRegisterForm()","    {","        return view('admin.auth.register');  // 管理者用テンプレート","    }"]}],[{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":31}],[{"start":{"row":36,"column":0},"end":{"row":49,"column":1},"action":"remove","lines":["/**"," * Get a validator for an incoming registration request."," *"," * @param  array  $data"," * @return \\Illuminate\\Contracts\\Validation\\Validator"," */","protected function validator(array $data)","{","    return Validator::make($data, [","        'name' =&gt; ['required', 'string', 'max:255'],","        'email' =&gt; ['required', 'string', 'email', 'max:255', 'unique:admins'], // adminsテーブに変更","        'password' =&gt; ['required', 'string', 'min:6', 'confirmed'],","    ]);","}"],"id":39},{"start":{"row":36,"column":0},"end":{"row":49,"column":5},"action":"insert","lines":["    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'name' => ['required', 'string', 'max:255'],","            'email' => ['required', 'string', 'email', 'max:255', 'unique:admins'], // adminsテーブに変更","            'password' => ['required', 'string', 'min:6', 'confirmed'],","        ]);","    }"]}],[{"start":{"row":51,"column":0},"end":{"row":77,"column":1},"action":"remove","lines":["/**"," * Create a new user instance after a valid registration."," *"," * @param  array  $data"," * @return \\App\\User"," */","protected function create(array $data)","{","    return Admin::create([  // Adminに変更","        'name' =&gt; $data['name'],","        'email' =&gt; $data['email'],","        'password' =&gt; Hash::make($data['password']),","    ]);","}","","/**"," * Get the guard to be used during registration."," *"," * @return \\Illuminate\\Contracts\\Auth\\StatefulGuard"," */","protected function guard()","{","    return \\Auth::guard('admin'); //管理者認証のguardを指定","}","","","}"],"id":43},{"start":{"row":51,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":["    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return Admin::create([","            'name' => $data['name'],","            'email' => $data['email'],","            'password' => Hash::make($data['password']),","        ]);","    }","    protected function guard(){","        return \\Auth::guard('admin'); //管理者認証のguardを指定","    }","}"]}],[{"start":{"row":0,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":["<?php","namespace App\\Http\\Controllers\\Admin\\Auth;","use App\\Admin;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","    use RegistersUsers;","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/admin/home';","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function showRegisterForm()","    {","        return view('admin.auth.register');  // 管理者用テンプレート","    }","","    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'name' => ['required', 'string', 'max:255'],","            'email' => ['required', 'string', 'email', 'max:255', 'unique:admins'], // adminsテーブに変更","            'password' => ['required', 'string', 'min:6', 'confirmed'],","        ]);","    }","","    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return Admin::create([","            'name' => $data['name'],","            'email' => $data['email'],","            'password' => Hash::make($data['password']),","        ]);","    }","    protected function guard(){","        return \\Auth::guard('admin'); //管理者認証のguardを指定","    }","}"],"id":44},{"start":{"row":0,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":["<?php","namespace App\\Http\\Controllers\\Admin\\Auth;","use App\\Admin;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","    use RegistersUsers;","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/admin/home';","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function showRegisterForm()","    {","        return view('admin.auth.register');  // 管理者用テンプレート","    }","    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'name' => ['required', 'string', 'max:255'],","            'email' => ['required', 'string', 'email', 'max:255', 'unique:admins'], // adminsテーブに変更","            'password' => ['required', 'string', 'min:6', 'confirmed'],","        ]);","    }","    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return Admin::create([","            'name' => $data['name'],","            'email' => $data['email'],","            'password' => Hash::make($data['password']),","        ]);","    }","    protected function guard(){","        return \\Auth::guard('admin'); //管理者認証のguardを指定","    }","}"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1566217982647,"hash":"a06cb319de8f398c1c939c69559bd6fb17e0434f"}